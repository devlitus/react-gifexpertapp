{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAY9C,OACE,0BAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OAExCN,EAAc,MAIZ,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAZhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,Y,uBCNdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,gDACgCC,UACnDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVhB,kBAadM,GAbc,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEtC,OACE,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCHGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GACtBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAIZ,CAACpB,IACGqB,EDZ0BK,CAAa1B,GAAjCa,EAD0B,EAChCN,KAAca,EADkB,EAClBA,QAErB,OACE,oCACE,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,WACX,yBAAKA,UAAU,aACbH,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UET3BkB,EAAe,WAAO,IAAD,EAEI1C,mBAAS,CAAC,cAFd,mBAEzB2C,EAFyB,KAEb5C,EAFa,KAMhC,OACE,oCACE,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACG4C,EAAWpB,KAAI,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,U,MCb5C8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.184e83de.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories(cats => [inputValue, ...cats]);\n    }\n    setInputValue('');\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n\n};\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}","export const getGifs = async (category) => {\n  const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=9v6eFZtAlSsbGZSl0GO9Aqe459QW9i8a`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n","import React from 'react'\n\nexport const GifGridItem = ({id ,title, url}) => {\n  \n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n  const {data: images, loading} =  useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n      {<div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>}\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n      \n    });\n  }, [category]);\n  return state; //{data: [], loading: true};\n};\n","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n  \n  const [categories, setCategories] = useState(['One Punch']);\n  /* const handleAdd = () => {\n    setCategories(categories => [...categories, 'HunterXHunter']);\n  } */\n  return (\n    <>\n      <h2>Gif Expert App</h2>\n      <AddCategory setCategories={setCategories}/>\n      <hr/>\n\n      <ol>\n        {categories.map(category => \n          <GifGrid key={category} category={category} />\n        )}\n      </ol>\n    </>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}